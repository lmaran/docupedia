name: Build and test
on:
    # push:
    #     branches: ["**", "!*-dist"]
    # pull_request:
    #     branches: ["main"]
    push:
        branches:
            - main
jobs:
    build:
        runs-on: ubuntu-latest
        environment:
            name: production
            url: https://docupedia.ro
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"
              env:
                  SECRET1: ${{ secrets.SECRET1 }}
                  VAR1: ${{ vars.VAR1 }}

            - run: |
                  echo "repository secret : $SECRET2"
                  echo "repository variable : $VAR2"

            - run: npm install
            - run: npm run prettier
            - run: npm run lint
            # - run: npm run build-prod --if-present
            - run: npm test
            # - run: |
            #     git clone -b "${GITHUB_REF##*/}"-dist --single-branch https://github.com/${GITHUB_REPOSITORY}.git ../tmpFolder
            #     git config --global user.name "${GITHUB_REPOSITORY_OWNER}" # we need to set an author for commit
            #     git config --global user.email "lucian.maran@outlook.com"

            #     # Existing structure:
            #     #  ~/work/docupedia/docupedia (contains "master" branch)
            #     #  ~/work/docupedia/tmpFolder (contains "dist" branch)

            #     # Run all commands below from tmpFolder
            #     cd ../tmpFolder
            #     rm -rf *
            #     cp -rf  ../docupedia/dist/* .
            #     cp ../docupedia/package.json .
            #     echo "Waiting for npm install..."
            #     npm install --omit=dev
            #     rm -f package-lock.json  # keep package.json (we need "type": "module")

            #     [ -d public ] || mkdir -p public # create public folder if not exists
            #     [ -f public/version.txt ] || touch public/version.txt # create a file if not exists
            #     date > public/version.txt # add a timestamp to a file

            #     git add -A

            #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
            #     git commit -m "."
            #     git push origin

    # Uncoment the two lines below for remote debug (just use in a terminal the provided url for ssh)
    # - name: Setup upterm session
    #   uses: lhotari/action-upterm@v1
